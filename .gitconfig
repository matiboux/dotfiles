[core]
	#excludesfile = ~/.gitignore
[user]
	name = Matiboux
	email = matiboux@gmail.com
[color]
	ui = true
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[commit]
	verbose = true
[pull]
	default = simple
	rebase = true
[push]
	default = simple
[branch]
	autosetupmerge = always
	autosetuprebase = always
[rebase]
	autoSquash = true
	autoStash = true
[alias]
	# Checkout
	co = checkout
	sw = switch
	br = branch
	b = branch

	# Status
	ss = status
	s = ss -s
	st = s --untracked-files=no

	# Push
	epipush = !git pt && git pt epita
	p = push
	pus = p
	pf = p --force-with-lease
	#pt = p --follow-tags
	pt = p --tags

	# Pull / Fetch
	pul = pull
	f = fetch
	fa = f --all

	# Diff
	d = diff
	dc = d --cached

	# Add
	a = "!f() { git add $@ && git status -s | grep '^[MARCD]'; }; f"
	au = "!f() { git add -u $@ && git status -s | grep '^[MARCD]'; }; f"
	aa = "!f() { git add . && git status -s | grep '^[MARCD]'; }; f"

	# Commit
	c = commit
	ca = c --amend
	cm = c -m
	cam = ca -m
	cma = cam

	# Tag
	t = tag

	# Reset
	unstage = reset HEAD --
	r = reset

	# Log
	l = log --pretty=format:'%C(yellow)%h%Creset -%C(auto)%d%Creset %s %C(green)(%cr) %C(cyan)<%an>%Creset' --abbrev-commit
	la = l --all
	lg = l --graph
	lag = la --graph
	lga = lag
	lns = l --branches --not --remotes
	lps = lns
	ll = log
	lla = ll --all

	# Last commit
	last = l -1 HEAD
	llast = ll -1 HEAD
	dlast = show

	# Purge
	localpurge = "!f() { git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -d; }; f"
	remotepurge = "!f() { git remote prune ${1:-origin}; }; f"
